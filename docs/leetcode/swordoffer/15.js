// 请实现一个函数，输入一个整数，输出该数二进制表示中 1 的个数。例如，把 9 表示成二进制是 1001，有 2 位是 1。因此，如果输入 9，则该函数输出 2。

// 示例 1：

// 输入：00000000000000000000000000001011
// 输出：3
// 解释：输入的二进制串 00000000000000000000000000001011 中，共有三位为 '1'。
// 示例 2：

// 输入：00000000000000000000000010000000
// 输出：1
// 解释：输入的二进制串 00000000000000000000000010000000 中，共有一位为 '1'。
// 示例 3：

// 输入：11111111111111111111111111111101
// 输出：31
// 解释：输入的二进制串 11111111111111111111111111111101 中，共有 31 位为 '1'。

// 来源：力扣（LeetCode）
// 链接：https://leetcode-cn.com/problems/er-jin-zhi-zhong-1de-ge-shu-lcof
// 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。


/**
 * @param {number} n - a positive integer
 * @return {number}
 */
// js弱智解法
var hammingWeight = function(n) {
    return n.toString(2).split('').filter((k) => k == 1).length
};

// 正规解法
// 十进制转二进制
// 101 / 2 = 50 ..... 1
// 50 / 2 = 25  .----- 0
// 25 / 2 = 12 ----- 1
// 12 / 2 = 6 -------0
// 6 / 2 = 3 -------0
// 3 / 2 = 1 ------- 1
// 1 / 2 = 0 ------ 1
// 所以101的二进制就是1100101
var hammingWeight = function(n) {
    let count = 0;
    while(n >= 1) {
        let rest = n % 2;
        rest > 0 && count++;
        n = Math.floor(n / 2);
    }
    return count;
};

// 还可以改用按位与解决